// Code generated by MockGen. DO NOT EDIT.
// Source: internal/api/store/reminders_store.go
//
// Generated by this command:
//
//	mockgen -source=internal/api/store/reminders_store.go -destination=internal/api/store/mocks/mock_reminders_store.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "go-version/internal/api/models"
	store "go-version/internal/api/store"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockReminderStoreInterface is a mock of ReminderStoreInterface interface.
type MockReminderStoreInterface struct {
	ctrl     *gomock.Controller
	recorder *MockReminderStoreInterfaceMockRecorder
	isgomock struct{}
}

// MockReminderStoreInterfaceMockRecorder is the mock recorder for MockReminderStoreInterface.
type MockReminderStoreInterfaceMockRecorder struct {
	mock *MockReminderStoreInterface
}

// NewMockReminderStoreInterface creates a new mock instance.
func NewMockReminderStoreInterface(ctrl *gomock.Controller) *MockReminderStoreInterface {
	mock := &MockReminderStoreInterface{ctrl: ctrl}
	mock.recorder = &MockReminderStoreInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReminderStoreInterface) EXPECT() *MockReminderStoreInterfaceMockRecorder {
	return m.recorder
}

// CreateReminder mocks base method.
func (m *MockReminderStoreInterface) CreateReminder(ctx context.Context, reminder *models.Reminder) (*models.Reminder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateReminder", ctx, reminder)
	ret0, _ := ret[0].(*models.Reminder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateReminder indicates an expected call of CreateReminder.
func (mr *MockReminderStoreInterfaceMockRecorder) CreateReminder(ctx, reminder any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateReminder", reflect.TypeOf((*MockReminderStoreInterface)(nil).CreateReminder), ctx, reminder)
}

// DeleteReminder mocks base method.
func (m *MockReminderStoreInterface) DeleteReminder(ctx context.Context, userID, reminderID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteReminder", ctx, userID, reminderID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteReminder indicates an expected call of DeleteReminder.
func (mr *MockReminderStoreInterfaceMockRecorder) DeleteReminder(ctx, userID, reminderID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteReminder", reflect.TypeOf((*MockReminderStoreInterface)(nil).DeleteReminder), ctx, userID, reminderID)
}

// GetReminderByID mocks base method.
func (m *MockReminderStoreInterface) GetReminderByID(ctx context.Context, userID, reminderID string) (*models.Reminder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReminderByID", ctx, userID, reminderID)
	ret0, _ := ret[0].(*models.Reminder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReminderByID indicates an expected call of GetReminderByID.
func (mr *MockReminderStoreInterfaceMockRecorder) GetReminderByID(ctx, userID, reminderID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReminderByID", reflect.TypeOf((*MockReminderStoreInterface)(nil).GetReminderByID), ctx, userID, reminderID)
}

// ListReminders mocks base method.
func (m *MockReminderStoreInterface) ListReminders(ctx context.Context, filters *store.ReminderListFilters) ([]models.Reminder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListReminders", ctx, filters)
	ret0, _ := ret[0].([]models.Reminder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListReminders indicates an expected call of ListReminders.
func (mr *MockReminderStoreInterfaceMockRecorder) ListReminders(ctx, filters any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListReminders", reflect.TypeOf((*MockReminderStoreInterface)(nil).ListReminders), ctx, filters)
}

// UpdateReminder mocks base method.
func (m *MockReminderStoreInterface) UpdateReminder(ctx context.Context, reminder *models.Reminder) (*models.Reminder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateReminder", ctx, reminder)
	ret0, _ := ret[0].(*models.Reminder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateReminder indicates an expected call of UpdateReminder.
func (mr *MockReminderStoreInterfaceMockRecorder) UpdateReminder(ctx, reminder any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateReminder", reflect.TypeOf((*MockReminderStoreInterface)(nil).UpdateReminder), ctx, reminder)
}
