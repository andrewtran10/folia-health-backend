// Code generated by MockGen. DO NOT EDIT.
// Source: internal/api/store/users_store.go
//
// Generated by this command:
//
//	mockgen -source=internal/api/store/users_store.go -destination=internal/api/store/mocks/mock_users_store.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "go-version/internal/api/models"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUserStoreInterface is a mock of UserStoreInterface interface.
type MockUserStoreInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserStoreInterfaceMockRecorder
	isgomock struct{}
}

// MockUserStoreInterfaceMockRecorder is the mock recorder for MockUserStoreInterface.
type MockUserStoreInterfaceMockRecorder struct {
	mock *MockUserStoreInterface
}

// NewMockUserStoreInterface creates a new mock instance.
func NewMockUserStoreInterface(ctrl *gomock.Controller) *MockUserStoreInterface {
	mock := &MockUserStoreInterface{ctrl: ctrl}
	mock.recorder = &MockUserStoreInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserStoreInterface) EXPECT() *MockUserStoreInterfaceMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockUserStoreInterface) CreateUser(ctx context.Context, user *models.User) (*models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", ctx, user)
	ret0, _ := ret[0].(*models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockUserStoreInterfaceMockRecorder) CreateUser(ctx, user any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockUserStoreInterface)(nil).CreateUser), ctx, user)
}

// GetUser mocks base method.
func (m *MockUserStoreInterface) GetUser(ctx context.Context, userId string) (*models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", ctx, userId)
	ret0, _ := ret[0].(*models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockUserStoreInterfaceMockRecorder) GetUser(ctx, userId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockUserStoreInterface)(nil).GetUser), ctx, userId)
}
